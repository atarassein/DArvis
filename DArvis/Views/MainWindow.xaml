<Window x:Class="DArvis.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ctl="clr-namespace:DArvis.Controls"
        xmlns:models="clr-namespace:DArvis.Models"
        xmlns:settings="clr-namespace:DArvis.Settings"
        Title="DArvis" 
        Width="1024" Height="768"
        MinWidth="880" MinHeight="600"
        Style="{StaticResource ObsidianWindow}"
        WindowStartupLocation="CenterScreen"
        ContentRendered="Window_Shown"
        Closing="Window_Closing"
        Closed="Window_Closed">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280" MinWidth="240" MaxWidth="360"/>
            <ColumnDefinition Width="*" MinWidth="200"/>
            <ColumnDefinition Width="260" MinWidth="260" MaxWidth="360"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Overlay when showing Modal Dialogs -->
        <Grid Name="modalOverlay" Grid.RowSpan="3" Grid.ColumnSpan="4" Panel.ZIndex="10" Visibility="Hidden">
            <Border Background="Black" Opacity="0.3"/>
            <Border Background="{StaticResource ScanlineBrush}" Opacity="0.7"/>
        </Grid>

        <!-- Tool Bar -->
        <Border Grid.ColumnSpan="4" 
                BorderBrush="{StaticResource ObsidianSeparatorColor}"
                BorderThickness="0,0,0,1"
                Panel.ZIndex="9">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <!-- Launch Client Button -->
                    <Button Name="launchClientButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="launchClientButton_Click"
                            Padding="6,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="Lau_nch Client"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE1E2;"/>
                        </DockPanel>
                    </Button>
                    <!-- Load Macro State Button -->
                    <Button Name="loadStateButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="loadStateButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="_Load State"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE197;"/>
                        </DockPanel>
                    </Button>
                    <!-- Save Macro State Button -->
                    <Button Name="saveStateButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="saveStateButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="_Save State"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE105;"/>
                        </DockPanel>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <!-- Start Macro Button -->
                    <Button Name="startMacroButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="startMacroButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="Sta_rt Macro"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE102;"/>
                        </DockPanel>
                    </Button>
                    <!-- Pause Macro Button -->
                    <Button Name="pauseMacroButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="pauseMacroButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="_Pause Macro"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE103;"/>
                        </DockPanel>
                    </Button>
                    <!-- Stop Macro Button -->
                    <Button Name="stopMacroButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="stopMacroButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="S_top Macro"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE20D;"/>
                        </DockPanel>
                    </Button>
                    <!-- Stop All Macros Button -->
                    <Button Name="stopAllMacrosButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="stopAllMacrosButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel>
                            <Label DockPanel.Dock="Bottom"
                                   Content="Stop _All"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0,2,0,0"
                                       Text="&#xE20E;"/>
                        </DockPanel>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <!-- Metadata Editor Button -->
                    <Button Name="metadataEditorButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="metadataEditorButton_Click"
                            Padding="4,8,4,2">
                        <DockPanel VerticalAlignment="Stretch">
                            <Label DockPanel.Dock="Bottom"
                                   Content="_Metadata Editor"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0"
                                       Text="&#xE104;"/>
                        </DockPanel>
                    </Button>
                    <!-- Settings Button -->
                    <Button Name="settingsButton"
                            Style="{StaticResource ObsidianToolBarButton}"
                            Click="settingsButton_Click"
                            Padding="4,8,8,2">
                        <DockPanel VerticalAlignment="Stretch">
                            <Label DockPanel.Dock="Bottom"
                                   Content="App Settin_gs"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Margin="0"
                                   Padding="4,0,4,4"/>
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Bottom"
                                       FontSize="20"
                                       Margin="0"
                                       Text="&#xE2FC;"/>
                        </DockPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <StackPanel Grid.Row="1" Orientation="Vertical">
            <!-- Client List Box -->
            <ListBox Name="clientListBox"
                     Grid.Row="1"
                     BorderBrush="{StaticResource ObsidianSeparatorColor}"
                     BorderThickness="0,1,0,0"
                     ItemTemplate="{StaticResource PlayerDataTemplate}"
                     ItemsSource="{Binding Source={x:Static models:PlayerManager.Instance}, Path=VisiblePlayers}"
                     Style="{StaticResource ObsidianListBox}"
                     Margin="0"
                     SelectionChanged="clientListBox_SelectionChanged"
                     SelectionMode="Single">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianListBoxItem}">
                        <EventSetter Event="MouseDoubleClick" Handler="clientListBox_ItemDoubleClick"/>
                        <EventSetter Event="KeyDown" Handler="clientListBox_KeyDown"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>


        <!-- Grid Splitter -->
        <GridSplitter Grid.Row="1"
                      Width="1"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Stretch"
                      Panel.ZIndex="10"
                      Style="{StaticResource ObsidianGridSplitter}"/>

        <!-- Spell/Skills/Flower Tabs -->
        <TabControl Name="tabControl"
                    Grid.Row="1" Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Style="{StaticResource ObsidianTabControl}"
                    SelectedIndex="0"
                    SelectionChanged="tabControl_SelectionChanged"
                    Margin="-1,-1,0,0"
                    Padding="0">

            <!-- Follow Tab -->
            <TabItem Name="followTab" Header="Follow">
                <DockPanel>
                    <Button Name="testButton"
                            Click="testButton_Click">
                        Test Injection
                    </Button>
                    <Button Name="injectButton"
                            Click="injectButton_Click">
                        Inject DLL
                    </Button>
                </DockPanel>
            </TabItem>
            
            <!-- Inventory Tab -->
            <TabItem Name="inventoryTab" Header="_Items" IsEnabled="False">
                <DockPanel>

                    <!-- Toggle Inventory/Equipment Views -->
                    <Border Name="inventoryEquipmentToggleGroup" 
                            DockPanel.Dock="Top"
                            BorderBrush="{StaticResource ObsidianSeparatorColor}"
                            BorderThickness="1"
                            CornerRadius="8"
                            HorizontalAlignment="Center"
                            Margin="8,16,8,8"
                            Visibility="Collapsed">
                        <Grid>
                            <Border Name="MaskBorder"
                                    Background="{StaticResource ObsidianControlBackground}"
                                    CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <StackPanel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=MaskBorder}"/>
                                </StackPanel.OpacityMask>
                                <RadioButton x:Name="inventoryRadioButton"
                                             GroupName="Inventory"
                                             Style="{StaticResource ObsidianRadioButton}"
                                             BorderThickness="0"
                                             MinWidth="120"
                                             Content="_Inventory"
                                             IsChecked="True"
                                             Margin="0"
                                             Padding="16,4,8,4"
                                             ToolTip="Displays the character's inventory."/>
                                <RadioButton x:Name="equipmentRadioButton"
                                             GroupName="Inventory"
                                             Style="{StaticResource ObsidianRadioButton}"
                                             BorderThickness="0"
                                             MinWidth="120"
                                             Content="_Equipment"
                                             Margin="0"
                                             Padding="8,4,16,4"
                                             ToolTip="Displays the character's equipment and accessories."/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    
                    <!-- Inventory View -->
                    <ListBox Name="inventoryListBox"
                             DockPanel.Dock="Top"
                             Style="{StaticResource ObsidianInventoryListBox}"
                             ItemTemplate="{StaticResource InventoryItemDataTemplate}"
                             ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Inventory.ItemsAndGold}"
                             VerticalContentAlignment="Top"
                             Visibility="{Binding ElementName=inventoryRadioButton, Path=IsChecked, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapse}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianInventoryListBoxItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="inventoryListBox_ItemDoubleClick"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <!-- Equipment View -->
                    <ListBox Name="equipmentListBox"
                             DockPanel.Dock="Top"
                             Style="{StaticResource ObsidianEquipmentListBox}"
                             ItemTemplate="{StaticResource EquipmentItemDataTemplate}"
                             ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Equipment.SortedBySlot}"
                             VerticalContentAlignment="Top"
                             Visibility="{Binding ElementName=equipmentRadioButton, Path=IsChecked, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapse}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianEquipmentListBoxItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="equipmentListBox_ItemDoubleClick"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </TabItem>

            <!-- Skills Tabs-->
            <TabItem Name="skillsTab" Header="S_kills" IsEnabled="False">
                <TabControl Style="{StaticResource ObsidianPanelTabControl}">
                    <TabItem Header="_Temuair" IsEnabled="{Binding Path=IsEnabled, ElementName=skillsTab}">
                        <!-- Temuair Skills -->
                        <ListBox Name="temuairSkillListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Skillbook.TemuairSkills}"
                                 VerticalContentAlignment="Top">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="skillListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                    <!-- Medenia Skills -->
                    <TabItem Header="_Medenia" IsEnabled="{Binding Path=IsEnabled, ElementName=skillsTab}">
                        <ListBox Name="medeniaSkillListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Skillbook.MedeniaSkills}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="skillListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                    <!-- World Skills -->
                    <TabItem Header="_World" IsEnabled="{Binding Path=IsEnabled, ElementName=skillsTab}">
                        <ListBox Name="worldSkillListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Skillbook.WorldSkills}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="skillListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                </TabControl>
            </TabItem>

            <!-- Spells Tabs-->
            <TabItem Name="spellsTab" Header="S_pells" IsEnabled="False">
                <!-- Temuair Spells -->
                <TabControl Style="{StaticResource ObsidianPanelTabControl}">
                    <TabItem Header="_Temuair" IsEnabled="{Binding Path=IsEnabled, ElementName=spellsTab}">
                        <ListBox Name="temuairSpellListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Spellbook.TemuairSpells}"
                                 VerticalContentAlignment="Top">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="spellListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                    <!-- Medenia Spells -->
                    <TabItem Header="_Medenia" IsEnabled="{Binding Path=IsEnabled, ElementName=spellsTab}">
                        <ListBox Name="medeniaSpellListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Spellbook.MedeniaSpells}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="spellListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                    <!-- World Spells -->
                    <TabItem Header="_World" IsEnabled="{Binding Path=IsEnabled, ElementName=spellsTab}">
                        <ListBox Name="worldSpellListBox" 
                                 Style="{StaticResource ObsidianSkillListBox}"
                                 ItemTemplate="{StaticResource AbilityDataTemplate}"
                                 ItemsSource="{Binding ElementName=clientListBox, Path=SelectedItem.Spellbook.WorldSpells}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianSkillListBoxItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="spellListBox_ItemDoubleClick"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                </TabControl>
            </TabItem>

            <!-- Flowering Tab -->
            <TabItem Name="flowerTab" Header="_Flowering" IsEnabled="False" Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Flower Settings -->
                    <Border BorderBrush="{StaticResource ObsidianSeparatorColor}" 
                            BorderThickness="0,0,0,1"
                            Padding="0,8">
                        <UniformGrid HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Rows="1">
                            <CheckBox Name="flowerAlternateCharactersCheckBox"
                                      Style="{StaticResource ObsidianCheckBox}"
                                      FontSize="14"
                                      Margin="16,4"
                                      Checked="flowerAlternateCharactersCheckBox_Checked"
                                      Unchecked="flowerAlternateCharactersCheckBox_Checked"
                                      ToolTip="This enables automatic flowering for your alternate characters (if they require mana).">
                                _Auto-Flower My Characters
                            </CheckBox>
                            <CheckBox Name="flowerVineyardCheckBox"
                                      Style="{StaticResource ObsidianCheckBox}"
                                      FontSize="14"
                                      Margin="16,4"
                                      Checked="flowerVineyardCheckBox_Checked"
                                      Unchecked="flowerVineyardCheckBox_Checked"
                                      ToolTip="This will enable automatic casting of Lyliac Vineyard (on cooldown).">
                                Use Lyliac _Vineyard
                            </CheckBox>
                        </UniformGrid>
                    </Border>

                    <!-- Flower Queue -->
                    <ListBox Name="flowerListBox"
                             Grid.Row="1"
                             Style="{StaticResource ObsidianListBox}"
                             ItemTemplate="{StaticResource FlowerQueueItemDataTemplate}"
                             SelectionMode="Single"
                             Margin="0"
                             GiveFeedback="flowerQueueListBox_GiveFeedback">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianListBoxItem}">
                                <Setter Property="AllowDrop" Value="True"/>
                                <EventSetter Event="PreviewKeyDown" Handler="flowerQueueListBox_PreviewKeyDown"/>
                                <EventSetter Event="MouseDoubleClick" Handler="flowerQueueListBox_ItemDoubleClick"/>
                                <EventSetter Event="PreviewMouseMove" Handler="flowerQueueListBox_PreviewMouseMove"/>
                                <EventSetter Event="Drop" Handler="flowerQueueListBox_Drop"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <!-- Buttons -->
                    <Border Grid.Row="2"
                            BorderBrush="{StaticResource ObsidianSeparatorColor}"
                            BorderThickness="0,1,0,0">
                        <UniformGrid Rows="1"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch">
                            <!-- Add Target to Queue -->
                            <Button Name="addFlowerTargetButton"
                                    Style="{StaticResource ObsidianCommandButton}"
                                    Click="addFlowerTargetButton_Click"
                                    IsEnabled="{Binding ElementName=flowerAlternateCharactersCheckBox, Path=IsEnabled}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                               Foreground="{Binding ElementName=addFlowerTargetButton, Path=Foreground}"
                                               Text="&#xE109;"/>
                                    <Label Content="Add _New"
                                           Foreground="{Binding ElementName=addFlowerTargetButton, Path=Foreground}"/>
                                </StackPanel>
                            </Button>

                            <!-- Remove Selected Target from Queue -->
                            <Button Name="removeSelectedFlowerTargetButton"
                                    Style="{StaticResource ObsidianCommandButton}"
                                    Click="removeSelectedFlowerTargetButton_Click"
                                    IsEnabled="{Binding ElementName=flowerAlternateCharactersCheckBox, Path=IsEnabled}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                               Foreground="{Binding ElementName=removeSelectedFlowerTargetButton, Path=Foreground}"
                                               Text="&#xE10A;"/>
                                    <Label Content="_Remove"
                                           Foreground="{Binding ElementName=removeSelectedFlowerTargetButton, Path=Foreground}"/>
                                </StackPanel>
                            </Button>

                            <!-- Clear All Flower Targets from Queue -->
                            <Button Name="removeAllFlowerTargetsButton"
                                    Style="{StaticResource ObsidianCommandButton}"
                                    Click="removeAllFlowerTargetsButton_Click"
                                    IsEnabled="{Binding ElementName=flowerAlternateCharactersCheckBox, Path=IsEnabled}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                               Foreground="{Binding ElementName=removeAllFlowerTargetsButton, Path=Foreground}"
                                               Text="&#xE107;"/>
                                    <Label Content="Cle_ar All"
                                           Foreground="{Binding ElementName=removeAllFlowerTargetsButton, Path=Foreground}"/>
                                </StackPanel>
                            </Button>
                        </UniformGrid>
                    </Border>
                </Grid>
            </TabItem>

            <!-- Packets Tab -->
            <TabItem Name="packetsTab" Header="Packets">
                <DockPanel>
                    
                </DockPanel>
            </TabItem>

        </TabControl>

        <!-- Spell Queue Placeholder -->
        <Border Grid.Row="1"
                Grid.Column="3"
                Background="{StaticResource ObsidianControlBackground}"
                BorderBrush="{StaticResource ObsidianDisabled}"
                BorderThickness="1,0,0,0"
                HorizontalAlignment="Right"
                Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility, Converter={StaticResource VisibilityInverter}, Mode=OneWay}">

            <StackPanel Orientation="Vertical">

                <!-- Show Spell Queue Button -->
                <Button x:Name="showSpellQueueButton"
                        Style="{StaticResource ObsidianIconButton}"
                        IsEnabled="{Binding Path=IsEnabled, ElementName=spellsTab}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Margin="0"
                        Padding="4,4"
                        ToolTip="Shows the spell queue."
                        Click="showSpellQueueButton_Click">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                   Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   FontSize="24"
                                   Margin="0,0"
                                   Text="&#xE127;"/>

                        <TextBlock Style="{StaticResource ObsidianText}"
                                   Foreground="{Binding Path=Foreground, ElementName=showSpellQueueButton}"
                                   FontSize="18"
                                   Margin="0,8,0,8"
                                   Text="Spell Queue">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Border>

        <!-- Grid Splitter -->
        <GridSplitter Grid.Row="1"
                      Grid.Column="1"
                      Width="1"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Stretch"
                      Style="{StaticResource ObsidianGridSplitter}"
                      Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}"/>

        <!-- Spell Queue Grid -->
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Spell Queue Header -->
            <Border VerticalAlignment="Top"
                    Background="{DynamicResource ObsidianBackground}"
                    Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}">
                <Grid>
                    <TextBlock Text="Spell Queue"
                               Style="{StaticResource ObsidianText}"
                               TextAlignment="Center"
                               TextWrapping="Wrap"
                               FontSize="18"
                               Padding="4,2"/>

                    <!-- Hide Spell Queue Button -->
                    <Button
                            Style="{StaticResource ObsidianIconButton}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="&#xE126;"
                            Padding="2,1"
                            ToolTip="Hides the spell queue."
                            Click="hideSpellQueueButton_Click"/>
                </Grid>
            </Border>

            <!-- Spell Rotation Mode -->
            <DockPanel Grid.Row="1"
                       Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}">
                <TextBlock DockPanel.Dock="Left"
                           Text="Rotation:"
                           Style="{StaticResource ObsidianText}"
                           TextAlignment="Left"
                           FontSize="16"
                           Margin="12,4,8,4"/>
                <ComboBox Name="spellQueueRotationComboBox" 
                          Style="{StaticResource ObsidianComboBox}"
                          ItemTemplate="{StaticResource StringDataTemplate}"
                          SelectedValuePath="Value"
                          SelectionChanged="spellQueueRotationComboBox_SelectionChanged"
                          Margin="8">
                    <settings:UserSetting Key="None" DisplayText="No Rotation" Value="None"/>
                    <settings:UserSetting Key="Singular" DisplayText="Singular Order" Value="Singular"/>
                    <settings:UserSetting Key="RoundRobin" DisplayText="Round Robin" Value="RoundRobin"/>
                </ComboBox>
            </DockPanel>

            <Separator Grid.Row="2"
                       Style="{StaticResource ObsidianSeparator}"
                       Margin="0"
                       Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}"/>

            <!-- Spell Queue -->
            <ListBox Name="spellQueueListBox"
                     Grid.Row="3"
                     Style="{StaticResource ObsidianListBox}"
                     ItemTemplate="{StaticResource SpellQueueItemDataTemplate}"
                     SelectionMode="Single"
                     Visibility="Collapsed"
                     GiveFeedback="spellQueueListBox_GiveFeedback">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource ObsidianListBoxItem}">
                        <Setter Property="AllowDrop" Value="True"/>
                        <EventSetter Event="PreviewKeyDown" Handler="spellQueueListBox_PreviewKeyDown"/>
                        <EventSetter Event="MouseDoubleClick" Handler="spellQueueListBox_ItemDoubleClick"/>
                        <EventSetter Event="PreviewMouseMove" Handler="spellQueueListBox_PreviewMouseMove"/>
                        <EventSetter Event="Drop" Handler="spellQueueListBox_Drop"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>

            <Separator Grid.Row="4"
                       Style="{StaticResource ObsidianSeparator}"
                       Margin="0"
                       Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}"/>

            <Grid Grid.Row="5" Visibility="{Binding ElementName=spellQueueListBox, Path=Visibility}">
                <UniformGrid Rows="1"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Center">
                    <!-- Remove Selected Spell from Queue -->
                    <Button Name="removeSelectedSpellButton"
                            Style="{StaticResource ObsidianCommandButton}"
                            Click="removeSelectedSpellButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding ElementName=removeSelectedSpellButton, Path=Foreground}"
                                       Text="&#xE10A;"/>
                            <Label Content="_Remove"
                                   Foreground="{Binding ElementName=removeSelectedSpellButton, Path=Foreground}"/>
                        </StackPanel>
                    </Button>

                    <!-- Clear All Spells from Queue -->
                    <Button Name="removeAllSpellsButton"
                            Style="{StaticResource ObsidianCommandButton}"
                            Click="removeAllSpellsButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{StaticResource ObsidianSymbolText}"
                                       Foreground="{Binding ElementName=removeAllSpellsButton, Path=Foreground}"
                                       Text="&#xE107;"/>
                            <Label Content="Cle_ar All"
                                   Foreground="{Binding ElementName=removeAllSpellsButton, Path=Foreground}"/>
                        </StackPanel>
                    </Button>
                </UniformGrid>
            </Grid>
        </Grid>
        
        <!-- Bottom Decorator -->
        <Border Grid.Row="2"
                Grid.ColumnSpan="4"
                Height="4"
                Background="{DynamicResource ObsidianBackground}"/>

        <Path Name="WindowResizeGrip" 
              Grid.RowSpan="3"
              Grid.ColumnSpan="4"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Width="16" Height="16"
              Fill="{DynamicResource ObsidianBackground}"
              Data="M 0,16 l 16,-16 v 16 h -16 z"/>
    </Grid>
</Window>
